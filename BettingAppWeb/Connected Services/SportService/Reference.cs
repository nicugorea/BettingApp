//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BettingAppWeb.SportService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Sport", Namespace="http://schemas.datacontract.org/2004/07/BettingAppWcf.Models")]
    [System.SerializableAttribute()]
    public partial class Sport : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SportIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SportID {
            get {
                return this.SportIDField;
            }
            set {
                if ((this.SportIDField.Equals(value) != true)) {
                    this.SportIDField = value;
                    this.RaisePropertyChanged("SportID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SportService.ISportService")]
    public interface ISportService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/GetSportsList", ReplyAction="http://tempuri.org/ISportService/GetSportsListResponse")]
        BettingAppWeb.SportService.Sport[] GetSportsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/GetSportsList", ReplyAction="http://tempuri.org/ISportService/GetSportsListResponse")]
        System.Threading.Tasks.Task<BettingAppWeb.SportService.Sport[]> GetSportsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/GetSportById", ReplyAction="http://tempuri.org/ISportService/GetSportByIdResponse")]
        BettingAppWeb.SportService.Sport GetSportById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/GetSportById", ReplyAction="http://tempuri.org/ISportService/GetSportByIdResponse")]
        System.Threading.Tasks.Task<BettingAppWeb.SportService.Sport> GetSportByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/AddSport", ReplyAction="http://tempuri.org/ISportService/AddSportResponse")]
        bool AddSport(BettingAppWeb.SportService.Sport sport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/AddSport", ReplyAction="http://tempuri.org/ISportService/AddSportResponse")]
        System.Threading.Tasks.Task<bool> AddSportAsync(BettingAppWeb.SportService.Sport sport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/RemoveSport", ReplyAction="http://tempuri.org/ISportService/RemoveSportResponse")]
        bool RemoveSport(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/RemoveSport", ReplyAction="http://tempuri.org/ISportService/RemoveSportResponse")]
        System.Threading.Tasks.Task<bool> RemoveSportAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/UpdateSport", ReplyAction="http://tempuri.org/ISportService/UpdateSportResponse")]
        bool UpdateSport(BettingAppWeb.SportService.Sport sport);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISportService/UpdateSport", ReplyAction="http://tempuri.org/ISportService/UpdateSportResponse")]
        System.Threading.Tasks.Task<bool> UpdateSportAsync(BettingAppWeb.SportService.Sport sport);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISportServiceChannel : BettingAppWeb.SportService.ISportService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SportServiceClient : System.ServiceModel.ClientBase<BettingAppWeb.SportService.ISportService>, BettingAppWeb.SportService.ISportService {
        
        public SportServiceClient() {
        }
        
        public SportServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SportServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SportServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SportServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BettingAppWeb.SportService.Sport[] GetSportsList() {
            return base.Channel.GetSportsList();
        }
        
        public System.Threading.Tasks.Task<BettingAppWeb.SportService.Sport[]> GetSportsListAsync() {
            return base.Channel.GetSportsListAsync();
        }
        
        public BettingAppWeb.SportService.Sport GetSportById(int id) {
            return base.Channel.GetSportById(id);
        }
        
        public System.Threading.Tasks.Task<BettingAppWeb.SportService.Sport> GetSportByIdAsync(int id) {
            return base.Channel.GetSportByIdAsync(id);
        }
        
        public bool AddSport(BettingAppWeb.SportService.Sport sport) {
            return base.Channel.AddSport(sport);
        }
        
        public System.Threading.Tasks.Task<bool> AddSportAsync(BettingAppWeb.SportService.Sport sport) {
            return base.Channel.AddSportAsync(sport);
        }
        
        public bool RemoveSport(int id) {
            return base.Channel.RemoveSport(id);
        }
        
        public System.Threading.Tasks.Task<bool> RemoveSportAsync(int id) {
            return base.Channel.RemoveSportAsync(id);
        }
        
        public bool UpdateSport(BettingAppWeb.SportService.Sport sport) {
            return base.Channel.UpdateSport(sport);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateSportAsync(BettingAppWeb.SportService.Sport sport) {
            return base.Channel.UpdateSportAsync(sport);
        }
    }
}
